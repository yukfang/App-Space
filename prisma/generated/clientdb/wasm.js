
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ApiCredentialScalarFieldEnum = {
  id: 'id',
  app_key: 'app_key',
  access_token: 'access_token',
  access_token_expire_in: 'access_token_expire_in',
  refresh_token: 'refresh_token',
  refresh_token_expire_in: 'refresh_token_expire_in',
  open_id: 'open_id',
  seller_name: 'seller_name',
  seller_base_region: 'seller_base_region',
  user_type: 'user_type',
  granted_scopes: 'granted_scopes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShopScalarFieldEnum = {
  id: 'id',
  seller_id: 'seller_id',
  seller_name: 'seller_name',
  test: 'test'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.ApiCredentialOrderByRelevanceFieldEnum = {
  app_key: 'app_key',
  access_token: 'access_token',
  refresh_token: 'refresh_token',
  open_id: 'open_id',
  seller_name: 'seller_name',
  seller_base_region: 'seller_base_region'
};

exports.Prisma.ShopOrderByRelevanceFieldEnum = {
  seller_id: 'seller_id',
  seller_name: 'seller_name',
  test: 'test'
};


exports.Prisma.ModelName = {
  ApiCredential: 'ApiCredential',
  Shop: 'Shop'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "clientdb",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/yuk/yuk-fang-ws/Project/prisma-mysql-ts-demo/prisma/generated/clientdb",
      "fromEnvVar": null
    },
    "config": {
      "datasource": "db",
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/yuk/yuk-fang-ws/Project/prisma-mysql-ts-demo/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// db: 用来存 API Token\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// 为 db 生成 Client\ngenerator clientdb {\n  provider      = \"prisma-client-js\"\n  output        = \"./generated/clientdb\"\n  datasource    = \"db\"\n  binaryTargets = [\"native\", \"debian-openssl-3.0.x\"]\n}\n\n// ================= Models =================\n\n// db 表：API 凭证\nmodel ApiCredential {\n  id                      Int      @id @default(autoincrement())\n  app_key                 String\n  access_token            String\n  access_token_expire_in  BigInt\n  refresh_token           String\n  refresh_token_expire_in BigInt\n  open_id                 String\n  seller_name             String\n  seller_base_region      String\n  user_type               Int\n  granted_scopes          Json\n  createdAt               DateTime @default(now())\n  updatedAt               DateTime @updatedAt\n}\n\n// Shops\nmodel Shop {\n  id          Int    @id @default(autoincrement())\n  seller_id   String @unique\n  seller_name String\n  test        String\n}\n",
  "inlineSchemaHash": "7fa6ba867ab0a7a0d1be07d7c935568cc15f8498ea8245612e790d5bd3eb212a",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"ApiCredential\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"app_key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token_expire_in\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refresh_token_expire_in\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"open_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seller_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seller_base_region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_type\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"granted_scopes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Shop\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seller_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seller_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"test\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

